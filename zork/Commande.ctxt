#BlueJ class context
comment0.params=motCommande\ secondMot
comment0.target=Commande(java.lang.String,\ java.lang.String)
comment0.text=\r\n\ \ Initialise\ une\ Commande\ a\ partir\ des\ deux\ mots\ sp\u00C3\u00A9cifi\u00C3\u00A9s.\ <p>\r\n\r\n\ \ Le\ premier\ argument\ repr\u00C3\u00A9sente\ un\ mot\ commande,\ sa\ valeur\ peut\ etre\ null\ si\r\n\ \ le\ mot\ commande\ ne\ correspond\ pas\ a\ une\ commande\ valide.\ Le\ second\ mot\ peut\r\n\ \ \u00C3\u00A9galement\ etre\ null\ dans\ le\ cas\ ou\ l'utilisateur\ n'aurait\ pas\ fourni\ de\r\n\ \ second\ mot\ dans\ sa\ commande.</p>\r\n\r\n\ @param\ \ motCommande\ \ Le\ mot\ commande\ de\ la\ commande\ utilisateur\ ou\ null\r\n\ @param\ \ secondMot\ \ \ \ Le\ second\ mot\ de\ la\ commande\ utilisateur\ ou\ null\r\n
comment1.params=
comment1.target=java.lang.String\ getMotCommande()
comment1.text=\r\n\ \ Renvoie\ le\ mot\ commande\ (le\ premier\ mot)\ de\ cette\ Commande.\ Si\ cette\r\n\ \ commande\ n'est\ pas\ une\ commande\ valide,\ la\ valeur\ renvoy\u00C3\u00A9e\ est\ null.\r\n\r\n\ @return\ \ \ \ Le\ mot\ commande\ de\ cette\ Commande\ ou\ null\r\n
comment2.params=
comment2.target=java.lang.String\ getSecondMot()
comment2.text=\r\n\ \ Renvoie\ le\ second\ mot\ de\ cette\ Commande\ ou\ null\ si\ cette\ commande\ ne\r\n\ \ poss\u00C3\u00A8de\ pas\ de\ second\ mot.\r\n\r\n\ @return\ \ \ \ le\ second\ mot\ de\ cette\ Commande\ ou\ null\r\n
comment3.params=
comment3.target=boolean\ estInconnue()
comment3.text=\r\n\ \ Teste\ si\ cette\ commande\ est\ une\ commande\ reconnue\ par\ le\ jeu.\r\n\r\n\ @return\ \ \ \ true\ si\ cette\ commande\ est\ valide\ ;\ false\ sinon\r\n
comment4.params=
comment4.target=boolean\ aSecondMot()
comment4.text=\r\n\ \ Teste\ si\ cette\ commande\ poss\u00C3\u00A8de\ un\ second\ mot.\r\n\r\n\ @return\ \ \ \ true\ si\ cette\ commande\ poss\u00C3\u00A8de\ un\ second\ mot\ ;\ false\ sinon\r\n
numComments=5
